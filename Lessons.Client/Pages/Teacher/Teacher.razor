@page "/Teacher"
@using Lessons.Domain.DTO.Person
@using Lessons.Domain.Model
@using Lessons.Domain.DTO.Lesson
@inject HttpClient Http

<h3>Выберите преподавателя</h3>
<hr/>

<PageTitle>Просмотреть расписание</PageTitle>
<div>
    <select @bind="TeacherId" id="TeacherId"> 
        @if (Teachers != null)
        {
            <option selected="selected">
                Выберите преподавателя
            </option>
            @foreach (var teacher in Teachers)
            {
                <option value="@teacher.Id">
                    @teacher.LastName @teacher.FirstName @teacher.PatronymicName, @teacher.Position
                </option>
            }
        }
    </select>
    <button class="btn btn-primary" @onclick="(async () => await GetLessons())">Посмотреть расписание</button>
</div>


<div class="list-group">
    @if (Lessons != null)
    {
        @foreach (var lesson in Lessons)
        {
            <div id="@lesson.Id" class="list-group-item list-group-item-action">
            
                <label>Тип занятия:</label>
                <div>
                    @switch (lesson.LessonType)
                    {
                        case LessonType.Practice:
                            <text>Практика</text>
                            break;
                        case LessonType.Lecture:
                            <text>Лекция</text>
                            break;
                        case LessonType.Lab:
                            <text>Лабораторная</text>
                            break;
                    }
                </div>
                
                <label>Тема:</label>
                <div>@lesson.Name</div>
                
                <label>Дата:</label>
                <div>@lesson.DateTime</div>
                
                <label>Аудитория:</label>
                <div>@lesson.Classroom</div>
                
                <label>Преподаватель:</label>
                <div>@lesson.Teacher.LastName @lesson.Teacher.FirstName @lesson.Teacher.PatronymicName</div>
                <a class="btn btn-primary" href="Teachers/@TeacherId/Lessons/@lesson.Id">Изменить тему занятия</a>

            </div>
        }
    }
    else
    {
        <div  class="list-group-item list-group-item-action">Занятий нет</div>
    }

</div>
@code {
    private List<TeacherDto> Teachers;
    private int TeacherId;
    private List<LessonDto> Lessons;

    private async Task GetLessons()
    {
        if (TeacherId > 0)
            Lessons = await Http.GetFromJsonAsync<List<LessonDto>>($"http://localhost:5059/api/Persons/Teachers/{TeacherId}/Lessons");
        else
            Lessons = new List<LessonDto>();
    }
    
    
    protected override async Task OnInitializedAsync()
    {
        Teachers = await Http.GetFromJsonAsync<List<TeacherDto>>("http://localhost:5059/api/Persons/Teachers");
    }
}